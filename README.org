#+STARTUP: showall indent

* Windows Utilities

Windows で動作するユティリティコマンド群です。

Windows 10 1903 以降で利用可能です。それより前の Windows で利用する場合は、
該当するバージョンのサブフォルダ配下のファイルを本フォルダにマージしてご利用ください。

本コマンドは AutoHotKey_L（v1.1系）のスクリプトとして作成しています。
AutoHotKey については、以下を参照してください。

- https://www.autohotkey.com/
- https://so-zou.jp/software/tool/system/auto-hot-key/introduction/
- http://ahkwiki.net/Top

Unicode 64bit のコンパイラでコンパイルしたバイナリも登録しています。

全てのコマンドは、DrvFs ファイルシステム上のフォルダに格納する必要があります。
WSL からコマンドを利用する場合には、格納したフォルダにコマンドパスを通してお使いください。
（ Windows 10 1903 を利用している場合、PATH に登録するパスは DrvFs のフォルダへの実際のパス
（シンボリックリンクではないパス）としてください。
シンボリックリンクのパスを PATH に登録すると、exe コマンドが実行できなくなります。）

コマンドの中で wsl.exe を使っています。複数の Linux のディストリビューションをインストールしている場合は、
wslconfig /s コマンドで連携する（emacsclient をコールする）ディストリビューションを指定してください。

** ■ wslemacs-start

WSL Emacs をデーモンモードで起動するためのコマンドです。以降に紹介している wslclient を利用する
ために作成しました。

Startup フォルダにコマンドのショートカットファイルを格納しておくと、OS 起動時にコマンドを
自動起動させることができます。

*** 使用方法

#+BEGIN_EXAMPLE
wslemacs-start.exe
#+END_EXAMPLE

wslemacs-start.ahk を見ていただくと分かる通り、Emacs はログインシェルかつインタラクティブ
モードで起動した bash から起動するようにしています。これは、環境変数などが極力設定された
状態で Emacs が立ち上がるようにするためです。bash 起動時にインタラクティブな応答（例えば、
keychain や ssh-add 実行時のパスフレーズの入力など）があるとコマンドが正常に起動できません
ので、ご留意ください。
そのような応答が必要な場合は、WSL のコンソールを立ち上げた後、emacs --daemon コマンドを使って
Emacs を起動するようにしてください。

なお、パスフレーズの入力を回避する方法としては、ssh-agent-wsl を使う方法があるようです。

- https://github.com/rupor-github/ssh-agent-wsl
- https://laboradian.com/use-ssh-agent-wsl/

次の設定を ~/.bash_profile に追加するのが良いと思います。

#+BEGIN_EXAMPLE
eval $(<ssh-agent-wsl コマンドを置く Windows のパス>/ssh-agent-wsl -a ~/.ssh/ssh-agent-wsl.sock -r)
#+END_EXAMPLE

⇒ （2020/07/19 追記）同じ開発者から新しいプロジェクトがリリースされていました。

- https://github.com/rupor-github/wsl-ssh-agent
- https://hnakamur.github.io/blog/2020/03/06/setup-wsl-ssh-agent/

使ってみましたが、wsl-ssh-agent はまだ WSL2 で利用できないようですので、ssh-aget-wsl を使い
続けることにしました。

** ■ wslemacs-stop

WSL Emacs を終了するためのコマンドです。

*** 使用方法

#+BEGIN_EXAMPLE
wslemacs-stop.exe
#+END_EXAMPLE

** ■ wslclient / emacsclientw

WSL Emacs と連携可能な emacsclient コマンドです。

Emacs は事前にデーモンモードで起動しておくか、普通に Emacs を立ち上げておいてください。

また、Xサーバとして VcXsrv が起動している必要があります。

*** 使用方法

#+BEGIN_EXAMPLE
wslclient [emacsclient options] file...        # emacsclient command for WSL (frontend command)
wslclient.exe [emacsclient options] file...    # emacsclient command for Windows (frontend command)
emacsclientw.exe [emacsclient options] file... # emacsclient command with activate control (base command)
#+END_EXAMPLE

Emacs や Windows 側に必要となる設定は、以下の説明を参照してください。

- [[https://www49.atwiki.jp/ntemacs/pages/75.html][WSL の emacsclient を Windows から利用するための設定]]

wslclient.exe はコマンド名称にハイフンで繋がるオプションを指定できます。例えば、wslclient.exe
をコピーして、wslclient-cn.exe というファイル名のコマンドを作ると、emacsclientw.exe に -cn 
オプションを付けて呼び出すコマンドとなります。
以下の４つのコマンド名称のコマンドを作っておけば、大抵は事足りるのではないかと思います。
コマンドの引数としてオプションを指定することもできますが、Windows の GUI を使った利用でも
オプションの指定ができるように、このような仕様としています。

#+BEGIN_EXAMPLE
wslclient.exe    # wait version
wslclient-n.exe  # no-wait version
wslclient-c.exe  # create-frame and wait version
wslclient-cn.exe # create-frame and no-wait version
#+END_EXAMPLE

wslemacs-start.exe で Emacs を起動している場合は、Alt+e で本コマンドを起動することもできます。
（wslclient.exe、emacsclientw.exe は、wslemacs-start.exe と 同じフォルダに格納しておく
必要があります。）

exe コマンドを新規にインストールした場合、もしくは更新した場合には、一回目のコマンド
実行時に正常に動作しないこと（コマンドが二回実行されるなど）があるようです。
二回目からは正常に動作します。

** ■ winactivate

開いているウィンドウをアクティベートするためのコマンドです。

Cygwin もしくは WSL の sglstart コマンドから利用することを目的として作成しました。

*** 使用方法

#+BEGIN_EXAMPLE
winactivate.exe filename
#+END_EXAMPLE

*** 使用例

#+BEGIN_EXAMPLE
winactivate.exe foo.txt
#+END_EXAMPLE

この場合、以下の正規表現にマッチするタイトルを持つアクティブではないウィンドウがあれば、
アクティベートされます。

#+BEGIN_EXAMPLE
(^| )(foo\.txt|foo)( |$)
#+END_EXAMPLE

該当するウィンドウがあった場合は 0 を、なかった場合は 1 を返します。

*** その他

sglstart コマンドについては、以下を参照してください。

- [[https://www49.atwiki.jp/ntemacs/pages/60.html][singleton な動きをする cygstart 的コマンドを使うための設定 （Cygwin版）]]
- [[https://www49.atwiki.jp/ntemacs/pages/63.html][singleton な動きをする cygstart 的コマンドを使うための設定 （WSL版）]]
